(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["ReduxWordPress"] = factory();
	else
		root["ReduxWordPress"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 4);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports.qs = qs;
exports.upperFirst = upperFirst;
exports.trimEnd = trimEnd;
exports.requestSingle = requestSingle;
exports.fetchSingle = fetchSingle;
exports.requestAll = requestAll;
exports.fetchAll = fetchAll;
function qs(params) {
	var parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

	return Object.keys(params).sort().map(function (key) {
		var encode = encodeURIComponent;

		if (Array.isArray(params[key])) {
			return params[key].map(function (value, i) {
				if (!parent) {
					return encode(key) + '[' + encode(i) + ']=' + encode(value);
				}

				return encode(parent) + '[' + encode(key) + '][' + encode(i) + ']=' + encode(value);
			}).join('&');
		} else if (_typeof(params[key]) === 'object') {
			return qs(params[key], key);
		}

		return !parent ? encode(key) + '=' + encode(params[key]) : encode(parent) + '[' + encode(key) + ']=' + encode(params[key]);
	}).join('&');
}

function upperFirst(name) {
	return name.split(/( |-|_)/).filter(function (item) {
		return item !== ' ' && item !== '-' && item !== '_';
	}).map(function (item) {
		return item.toLowerCase();
	}).map(function (item) {
		return item[0].toUpperCase() + item.slice(1);
	}).join('');
}
function trimEnd(message, char) {
	return message[message.length - 1] === char ? trimEnd(message.slice(0, -1), char) : message;
}

function requestSingle(url) {
	var requestPromise = new Promise(function (resolve, reject) {
		fetch(url).then(function (response) {
			if (response.ok) {
				response.json().then(function (json) {
					return resolve({ json: json, response: response });
				}).catch(function (error) {
					return reject(error);
				});
			} else {
				reject(response.statusText);
			}
		}).catch(reject);
	});

	return requestPromise;
}

function fetchSingle(url, success, error) {
	return requestSingle(url).then(success).catch(error);
}

function requestAll(url) {
	var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

	var fetchPage = function fetchPage(pagenum, data, resolve, reject) {
		fetch(url + '?' + qs(Object.assign({ per_page: 100 }, params, { page: pagenum }))).then(function (response) {
			if (response.ok) {
				response.json().then(function (items) {
					items.forEach(function (item) {
						return data.push(item);
					});

					var totalpages = parseInt(response.headers.get('X-WP-TotalPages'), 10);
					if (isNaN(totalpages)) {
						totalpages = 0;
					}

					if (pagenum >= totalpages) {
						resolve({ json: data, response: response });
					} else {
						fetchPage(pagenum + 1, data, resolve, reject);
					}
				}).catch(function (error) {
					return reject(error);
				});
			} else {
				reject(response.statusText);
			}
		}).catch(function (error) {
			return reject(error);
		});
	};

	return new Promise(function (resolve, reject) {
		return fetchPage(params.page || 1, [], resolve, reject);
	});
}

function fetchAll(url, params, onSuccess, onError) {
	return requestAll(url, params).then(onSuccess).catch(onError);
}

exports.default = {
	qs: qs,
	fetchSingle: fetchSingle,
	fetchAll: fetchAll
};

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = createActions;

var _helpers = __webpack_require__(0);

var getSuccessAction = function getSuccessAction(json, response, type, params) {
	var action = {
		type: type,
		ok: true,
		results: json,
		params: params
	};

	if (response) {
		var totalPages = parseInt(response.headers.get('X-WP-TotalPages'), 10);
		if (!isNaN(totalPages)) {
			action.totalPages = totalPages;
		}

		var total = parseInt(response.headers.get('X-WP-Total'), 10);
		if (!isNaN(total)) {
			action.total = total;
		}
	}

	return action;
};

var getSuccessHandler = function getSuccessHandler(dispatch, type, params) {
	return function (data) {
		dispatch(getSuccessAction(data.json, data.response, type, params));
	};
};

var getSuccessHandlerById = function getSuccessHandlerById(dispatch, type, id, params) {
	return function (data) {
		var action = getSuccessAction(data.json, data.response, type, params);
		action.id = id;
		dispatch(action);
	};
};

var getErrorHandler = function getErrorHandler(dispatch, type, params) {
	return function (error) {
		dispatch({
			type: type,
			ok: false,
			message: error,
			params: params
		});
	};
};

var getErrorHandlerById = function getErrorHandlerById(dispatch, type, id, params) {
	return function (error) {
		dispatch({
			type: type,
			ok: false,
			message: error,
			id: id,
			params: params
		});
	};
};

function createActions(name, host, endpoints) {
	var args = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

	var options = args;

	// fallback for previous version of this function where the last param was
	// for namespace argument
	if (typeof args === 'string') {
		options = { namespace: args };
	}

	var actions = {};
	var normalizedHost = (0, _helpers.trimEnd)(host, '/');
	var namespace = options.namespace || 'wp/v2';

	endpoints.forEach(function (endpoint) {
		var endpointName = (0, _helpers.upperFirst)(endpoint);

		if (options.fetch !== false) {
			actions['fetch' + endpointName] = function () {
				var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
				return function (dispatch) {
					var type = '@@wp/' + name + '/fetched/' + endpoint;

					dispatch({
						type: '@@wp/' + name + '/fetching/' + endpoint,
						params: params
					});

					return (0, _helpers.fetchSingle)(normalizedHost + '/' + namespace + '/' + endpoint + '?' + (0, _helpers.qs)(params), getSuccessHandler(dispatch, type, params), getErrorHandler(dispatch, type, params));
				};
			};
		}

		if (options.fetchEndpoint !== false) {
			actions['fetch' + endpointName + 'Endpoint'] = function (endpoint2) {
				var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
				return function (dispatch) {
					var type = '@@wp/' + name + '/fetched/' + endpoint + '/' + endpoint2;

					dispatch({
						type: '@@wp/' + name + '/fetching/' + endpoint + '/' + endpoint2,
						params: params
					});

					return (0, _helpers.fetchSingle)(normalizedHost + '/' + namespace + '/' + endpoint + '/' + endpoint2 + '?' + (0, _helpers.qs)(params), getSuccessHandler(dispatch, type, params), getErrorHandler(dispatch, type, params));
				};
			};
		}

		if (options.fetchById !== false) {
			actions['fetch' + endpointName + 'ById'] = function (id) {
				var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
				return function (dispatch) {
					var type = '@@wp/' + name + '/fetched-by-id/' + endpoint;

					dispatch({
						type: '@@wp/' + name + '/fetching-by-id/' + endpoint,
						id: id,
						params: params
					});

					return (0, _helpers.fetchSingle)(normalizedHost + '/' + namespace + '/' + endpoint + '/' + id + '?' + (0, _helpers.qs)(params), getSuccessHandlerById(dispatch, type, id, params), getErrorHandlerById(dispatch, type, id, params));
				};
			};
		}

		if (options.fetchEndpointById !== false) {
			actions['fetch' + endpointName + 'EndpointById'] = function (id, endpoint2) {
				var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
				return function (dispatch) {
					var type = '@@wp/' + name + '/fetched-by-id/' + endpoint + '/' + endpoint2;

					dispatch({
						type: '@@wp/' + name + '/fetching-by-id/' + endpoint + '/' + endpoint2,
						id: id,
						params: params
					});

					return (0, _helpers.fetchSingle)(normalizedHost + '/' + namespace + '/' + endpoint + '/' + id + '/' + endpoint2 + '?' + (0, _helpers.qs)(params), getSuccessHandlerById(dispatch, type, id, params), getErrorHandlerById(dispatch, type, id, params));
				};
			};
		}

		if (options.fetchAll !== false) {
			actions['fetchAll' + endpointName] = function () {
				var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
				return function (dispatch) {
					var type = '@@wp/' + name + '/fetched-all/' + endpoint;

					dispatch({
						type: '@@wp/' + name + '/fetching-all/' + endpoint,
						params: params
					});

					return (0, _helpers.fetchAll)(normalizedHost + '/' + namespace + '/' + endpoint, params, getSuccessHandler(dispatch, type, params), getErrorHandler(dispatch, type, params));
				};
			};
		}

		if (options.fetchAllEndpoint !== false) {
			actions['fetchAll' + endpointName + 'Endpoint'] = function (endpoint2) {
				var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
				return function (dispatch) {
					var type = '@@wp/' + name + '/fetched-all/' + endpoint + '/' + endpoint2;

					dispatch({
						type: '@@wp/' + name + '/fetching-all/' + endpoint + '/' + endpoint2,
						params: params
					});

					return (0, _helpers.fetchAll)(normalizedHost + '/' + namespace + '/' + endpoint + '/' + endpoint2, params, getSuccessHandler(dispatch, type, params), getErrorHandler(dispatch, type, params));
				};
			};
		}

		if (options.fetchAllEndpointById !== false) {
			actions['fetchAll' + endpointName + 'EndpointById'] = function (id, endpoint2) {
				var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
				return function (dispatch) {
					var type = '@@wp/' + name + '/fetched-all-by-id/' + endpoint + '/' + endpoint2;

					dispatch({
						type: '@@wp/' + name + '/fetching-all-by-id/' + endpoint + '/' + endpoint2,
						id: id,
						params: params
					});

					return (0, _helpers.fetchAll)(normalizedHost + '/' + namespace + '/' + endpoint + '/' + id + '/' + endpoint2, params, getSuccessHandlerById(dispatch, type, id, params), getErrorHandlerById(dispatch, type, id, params));
				};
			};
		}
	});

	return actions;
}

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

exports.default = createReducer;

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Reducer = function () {
	function Reducer(name) {
		_classCallCheck(this, Reducer);

		this.name = name;
	}

	_createClass(Reducer, [{
		key: 'match',
		value: function match() {
			return false;
		}
	}, {
		key: 'map',
		value: function map(state) {
			return state;
		}
	}, {
		key: 'prepareNewState',
		value: function prepareNewState(action) {
			var state = {};

			if (action.results) {
				state.data = action.results;
			} else if (action.result) {
				state.data = action.result;
			}

			if (typeof action.total !== 'undefined') {
				state.total = action.total;
			}

			if (typeof action.totalPages !== 'undefined') {
				state.totalPages = action.totalPages;
			}

			return state;
		}
	}]);

	return Reducer;
}();

var FetchReducer = function (_Reducer) {
	_inherits(FetchReducer, _Reducer);

	function FetchReducer() {
		_classCallCheck(this, FetchReducer);

		return _possibleConstructorReturn(this, (FetchReducer.__proto__ || Object.getPrototypeOf(FetchReducer)).apply(this, arguments));
	}

	_createClass(FetchReducer, [{
		key: 'match',
		value: function match(type) {
			return type.match(new RegExp('^@@wp/' + this.name + '/fetched/(\\w+)$'));
		}
	}, {
		key: 'map',
		value: function map(state, action) {
			var obj = {};
			var self = this;
			var match = self.match(action.type);

			obj[match[1]] = Object.assign({}, state[match[1]] || {}, self.prepareNewState(action));

			return Object.assign({}, state, obj);
		}
	}]);

	return FetchReducer;
}(Reducer);

var FetchAllReducer = function (_FetchReducer) {
	_inherits(FetchAllReducer, _FetchReducer);

	function FetchAllReducer() {
		_classCallCheck(this, FetchAllReducer);

		return _possibleConstructorReturn(this, (FetchAllReducer.__proto__ || Object.getPrototypeOf(FetchAllReducer)).apply(this, arguments));
	}

	_createClass(FetchAllReducer, [{
		key: 'match',
		value: function match(type) {
			return type.match(new RegExp('^@@wp/' + this.name + '/fetched-all/(\\w+)$'));
		}
	}]);

	return FetchAllReducer;
}(FetchReducer);

var FetchByIdReducer = function (_Reducer2) {
	_inherits(FetchByIdReducer, _Reducer2);

	function FetchByIdReducer() {
		_classCallCheck(this, FetchByIdReducer);

		return _possibleConstructorReturn(this, (FetchByIdReducer.__proto__ || Object.getPrototypeOf(FetchByIdReducer)).apply(this, arguments));
	}

	_createClass(FetchByIdReducer, [{
		key: 'match',
		value: function match(type) {
			return type.match(new RegExp('^@@wp/' + this.name + '/fetched-by-id/(\\w+)$'));
		}
	}, {
		key: 'map',
		value: function map(state, action) {
			var obj = {};
			var match = this.match(action.type);

			obj[match[1] + '/' + action.id] = this.prepareNewState(action);

			return Object.assign({}, state, obj);
		}
	}]);

	return FetchByIdReducer;
}(Reducer);

var FetchEndpointReducer = function (_Reducer3) {
	_inherits(FetchEndpointReducer, _Reducer3);

	function FetchEndpointReducer() {
		_classCallCheck(this, FetchEndpointReducer);

		return _possibleConstructorReturn(this, (FetchEndpointReducer.__proto__ || Object.getPrototypeOf(FetchEndpointReducer)).apply(this, arguments));
	}

	_createClass(FetchEndpointReducer, [{
		key: 'match',
		value: function match(type) {
			return type.match(new RegExp('^@@wp/' + this.name + '/fetched/(\\w+)/(\\w+)$'));
		}
	}, {
		key: 'map',
		value: function map(state, action) {
			var obj = {};
			var self = this;
			var match = self.match(action.type);

			obj[match[1] + '/' + match[2]] = self.prepareNewState(action);

			return Object.assign({}, state, obj);
		}
	}]);

	return FetchEndpointReducer;
}(Reducer);

var FetchEndpointByIdReducer = function (_Reducer4) {
	_inherits(FetchEndpointByIdReducer, _Reducer4);

	function FetchEndpointByIdReducer() {
		_classCallCheck(this, FetchEndpointByIdReducer);

		return _possibleConstructorReturn(this, (FetchEndpointByIdReducer.__proto__ || Object.getPrototypeOf(FetchEndpointByIdReducer)).apply(this, arguments));
	}

	_createClass(FetchEndpointByIdReducer, [{
		key: 'match',
		value: function match(type) {
			return type.match(new RegExp('^@@wp/' + this.name + '/fetched-by-id/(\\w+)/(\\w+)$'));
		}
	}, {
		key: 'map',
		value: function map(state, action) {
			var obj = {};
			var self = this;
			var match = self.match(action.type);

			obj[match[1] + '/' + action.id + '/' + match[2]] = self.prepareNewState(action);

			return Object.assign({}, state, obj);
		}
	}]);

	return FetchEndpointByIdReducer;
}(Reducer);

var FetchAllEndpointReducer = function (_FetchEndpointReducer) {
	_inherits(FetchAllEndpointReducer, _FetchEndpointReducer);

	function FetchAllEndpointReducer() {
		_classCallCheck(this, FetchAllEndpointReducer);

		return _possibleConstructorReturn(this, (FetchAllEndpointReducer.__proto__ || Object.getPrototypeOf(FetchAllEndpointReducer)).apply(this, arguments));
	}

	_createClass(FetchAllEndpointReducer, [{
		key: 'match',
		value: function match(type) {
			return type.match(new RegExp('^@@wp/' + this.name + '/fetched-all/(\\w+)/(\\w+)$'));
		}
	}]);

	return FetchAllEndpointReducer;
}(FetchEndpointReducer);

var FetchAllEndpointByIdReducer = function (_FetchEndpointByIdRed) {
	_inherits(FetchAllEndpointByIdReducer, _FetchEndpointByIdRed);

	function FetchAllEndpointByIdReducer() {
		_classCallCheck(this, FetchAllEndpointByIdReducer);

		return _possibleConstructorReturn(this, (FetchAllEndpointByIdReducer.__proto__ || Object.getPrototypeOf(FetchAllEndpointByIdReducer)).apply(this, arguments));
	}

	_createClass(FetchAllEndpointByIdReducer, [{
		key: 'match',
		value: function match(type) {
			return type.match(new RegExp('^@@wp/' + this.name + '/fetched-all-by-id/(\\w+)/(\\w+)$'));
		}
	}]);

	return FetchAllEndpointByIdReducer;
}(FetchEndpointByIdReducer);

function createReducer(name) {
	var reducers = [new FetchReducer(name), new FetchAllReducer(name), new FetchByIdReducer(name), new FetchEndpointReducer(name), new FetchEndpointByIdReducer(name), new FetchAllEndpointReducer(name), new FetchAllEndpointByIdReducer(name)];

	return function () {
		var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
		var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

		if (!action.ok) {
			return state;
		}

		var newState = Object.assign({}, state);

		reducers.forEach(function (reducer) {
			if (reducer.match(action.type)) {
				newState = reducer.map(newState, action);
			}
		});

		return newState;
	};
}

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = createRequests;

var _helpers = __webpack_require__(0);

function createRequests(host, endpoints) {
	var args = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

	var options = args;

	// fallback for previous version of this function where the last param was
	// for namespace argument
	if (typeof args === 'string') {
		options = { namespace: args };
	}

	var requests = {};
	var namespace = options.namespace || 'wp/v2';

	endpoints.forEach(function (endpoint) {
		var normalizedURL = (0, _helpers.trimEnd)(host, '/');
		var endpointName = (0, _helpers.upperFirst)(endpoint);

		if (options.request !== false) {
			requests['request' + endpointName] = function () {
				var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
				return (0, _helpers.requestSingle)(normalizedURL + '/' + namespace + '/' + endpoint + '?' + (0, _helpers.qs)(params));
			};
		}

		if (options.requestEndpoint !== false) {
			requests['request' + endpointName + 'Endpoint'] = function (endpoint2) {
				var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
				return (0, _helpers.requestSingle)(normalizedURL + '/' + namespace + '/' + endpoint + '/' + endpoint2 + '?' + (0, _helpers.qs)(params));
			};
		}

		if (options.requestById !== false) {
			requests['request' + endpointName + 'ById'] = function (id) {
				var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
				return (0, _helpers.requestSingle)(normalizedURL + '/' + namespace + '/' + endpoint + '/' + id + '?' + (0, _helpers.qs)(params));
			};
		}

		if (options.requestEndpointById !== false) {
			requests['request' + endpointName + 'EndpointById'] = function (id, endpoint2) {
				var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
				return (0, _helpers.requestSingle)(normalizedURL + '/' + namespace + '/' + endpoint + '/' + id + '/' + endpoint2 + '?' + (0, _helpers.qs)(params));
			};
		}

		if (options.requestAll !== false) {
			requests['requestAll' + endpointName] = function () {
				var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
				return (0, _helpers.requestAll)(normalizedURL + '/' + namespace + '/' + endpoint, params);
			};
		}

		if (options.requestAllEndpoint !== false) {
			requests['requestAll' + endpointName + 'Endpoint'] = function (endpoint2) {
				var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
				return (0, _helpers.requestAll)(normalizedURL + '/' + namespace + '/' + endpoint + '/' + endpoint2, params);
			};
		}

		if (options.requestAllEndpointById !== false) {
			requests['requestAll' + endpointName + 'EndpointById'] = function (id, endpoint2) {
				var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
				return (0, _helpers.requestAll)(normalizedURL + '/' + namespace + '/' + endpoint + '/' + id + '/' + endpoint2, params);
			};
		}
	});

	return requests;
}

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.createRequests = exports.createActions = exports.createReducer = undefined;

var _reducer = __webpack_require__(2);

var _reducer2 = _interopRequireDefault(_reducer);

var _actions = __webpack_require__(1);

var _actions2 = _interopRequireDefault(_actions);

var _requests = __webpack_require__(3);

var _requests2 = _interopRequireDefault(_requests);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ReduxWordPress = {
	createReducer: _reducer2.default,
	createActions: _actions2.default,
	createRequests: _requests2.default
};

exports.default = ReduxWordPress;
exports.createReducer = _reducer2.default;
exports.createActions = _actions2.default;
exports.createRequests = _requests2.default;

/***/ })
/******/ ]);
});