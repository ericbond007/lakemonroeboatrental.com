'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = createRequests;

var _helpers = require('./helpers');

function createRequests(host, endpoints) {
	var args = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

	var options = args;

	// fallback for previous version of this function where the last param was
	// for namespace argument
	if (typeof args === 'string') {
		options = { namespace: args };
	}

	var requests = {};
	var namespace = options.namespace || 'wp/v2';

	endpoints.forEach(function (endpoint) {
		var normalizedURL = (0, _helpers.trimEnd)(host, '/');
		var endpointName = (0, _helpers.upperFirst)(endpoint);

		if (options.request !== false) {
			requests['request' + endpointName] = function () {
				var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
				return (0, _helpers.requestSingle)(normalizedURL + '/' + namespace + '/' + endpoint + '?' + (0, _helpers.qs)(params));
			};
		}

		if (options.requestEndpoint !== false) {
			requests['request' + endpointName + 'Endpoint'] = function (endpoint2) {
				var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
				return (0, _helpers.requestSingle)(normalizedURL + '/' + namespace + '/' + endpoint + '/' + endpoint2 + '?' + (0, _helpers.qs)(params));
			};
		}

		if (options.requestById !== false) {
			requests['request' + endpointName + 'ById'] = function (id) {
				var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
				return (0, _helpers.requestSingle)(normalizedURL + '/' + namespace + '/' + endpoint + '/' + id + '?' + (0, _helpers.qs)(params));
			};
		}

		if (options.requestEndpointById !== false) {
			requests['request' + endpointName + 'EndpointById'] = function (id, endpoint2) {
				var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
				return (0, _helpers.requestSingle)(normalizedURL + '/' + namespace + '/' + endpoint + '/' + id + '/' + endpoint2 + '?' + (0, _helpers.qs)(params));
			};
		}

		if (options.requestAll !== false) {
			requests['requestAll' + endpointName] = function () {
				var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
				return (0, _helpers.requestAll)(normalizedURL + '/' + namespace + '/' + endpoint, params);
			};
		}

		if (options.requestAllEndpoint !== false) {
			requests['requestAll' + endpointName + 'Endpoint'] = function (endpoint2) {
				var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
				return (0, _helpers.requestAll)(normalizedURL + '/' + namespace + '/' + endpoint + '/' + endpoint2, params);
			};
		}

		if (options.requestAllEndpointById !== false) {
			requests['requestAll' + endpointName + 'EndpointById'] = function (id, endpoint2) {
				var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
				return (0, _helpers.requestAll)(normalizedURL + '/' + namespace + '/' + endpoint + '/' + id + '/' + endpoint2, params);
			};
		}
	});

	return requests;
}